# Pipeline to deploy opsman to AWS using Pivotal's Platform Automation

# Download the Platform Automation image from Pivnet and push the image to your Gitlab repository 
image: registry.gitlab.com/miclip/acme-gitlab-aws-pas-dojo/platform-automation:2.1.1-beta

stages:
  - setup
  - configure-opsman
  - configure-pas
  - configure-healthwatch
  - apply-changes

variables:
  S3_BUCKET_TERRAFORM: miclip-terraform
  S3_ENDPOINT: http://s3.amazonaws.com
  S3_REGION: us-east-2
  AWS_ACCESS_KEY_ID: $aws_access_key_id
  AWS_SECRET_ACCESS_KEY: $aws_secret_access_key
  

create-infrastructure:
  stage: setup
  image: pcfnorm/rootfs:1.0.28
  variables:
    VARS_FILE: vars/mlsb/terraform.tfvars
    TF_VAR_access_key: $aws_access_key_id
    TF_VAR_secret_key: $aws_secret_access_key
    TF_VAR_ssl_cert: $ssl_cert
    TF_VAR_ssl_private_key: $ssl_private_key
  script:
    - terraform init -backend-config="bucket=${S3_BUCKET_TERRAFORM}" -backend-config="key=mlsb/terraform.tfstate" -backend-config="region=${S3_REGION}" terraforming-pas
    - terraform plan -out=pcf.tfplan -var-file=${VARS_FILE} terraforming-pas
    - terraform apply pcf.tfplan
    - tasks/create-rds-databases.sh terraforming-pas

destroy-infrastructure:
  stage: setup
  image: pcfnorm/rootfs:1.0.28
  when: manual
  variables:
    VARS_FILE: vars/mlsb/terraform.tfvars
    TF_VAR_access_key: $aws_access_key_id
    TF_VAR_secret_key: $aws_secret_access_key
    TF_VAR_ssl_cert: $ssl_cert
    TF_VAR_ssl_private_key: $ssl_private_key
  script:
    - terraform init -backend-config="bucket=${S3_BUCKET_TERRAFORM}" -backend-config="key=mlsb/terraform.tfstate" -backend-config="region=${S3_REGION}" terraforming-pas
    - terraform destroy -input=false -auto-approve -var-file=${VARS_FILE} terraforming-pas
     
fetch-healthwatch:
  stage: setup
  when: manual
  variables:
    CONFIG_FILE: download-product-configs/healthwatch.yml
    VARS_FILES: ""
    PRODUCT_NAME: healthwatch
    # interpolation
    FILES_GLOB: config/download-product-configs/healthwatch.yml
    VAR_PREFIX: DLP
    DLP_pivnet_token: $pivnet_token    
  script: 
   - tasks/gitlab-interpolate.sh
   - tasks/download-product.sh
   - tasks/upload-product-s3.sh

fetch-pas:
  stage: setup
  when: manual
  variables:
    CONFIG_FILE: download-product-configs/pas.yml
    VARS_FILES: ""
    PRODUCT_NAME: pas
    # interpolation
    FILES_GLOB: config/download-product-configs/pas.yml
    VAR_PREFIX: DLP
    DLP_pivnet_token: $pivnet_token    
  script: 
   - tasks/gitlab-interpolate.sh
   - tasks/download-product.sh
   - tasks/upload-product-s3.sh

fetch-mysql:
  stage: setup
  when: manual
  variables:
    CONFIG_FILE: download-product-configs/mysql.yml
    VARS_FILES: ""
    PRODUCT_NAME: mysql
    # interpolation
    FILES_GLOB: config/download-product-configs/mysql.yml
    VAR_PREFIX: DLP
    DLP_pivnet_token: $pivnet_token    
  script: 
   - tasks/gitlab-interpolate.sh
   - tasks/download-product.sh
   - tasks/upload-product-s3.sh

configure-opsman:
  stage: configure-opsman
  variables:
    VARS_FILES: vars/mlsb/director.yml
    OPS_FILES: ""    
    ENV_FILE: mlsb/env.yml
    AUTH_CONFIG_FILE: vars/mlsb/auth.yml
    # interpolation
    FILES_GLOB: "vars/mlsb/director.yml vars/mlsb/auth.yml env/mlsb/env.yml"
    VAR_PREFIX: OPSMAN
    DIRECTOR_CONFIG_FILE: mlsb/director.yml
    OPSMAN_opsman_user_username: $opsman_user_username
    OPSMAN_opsman_user_password: $opsman_user_password
    OPSMAN_ops_manager_decryption_passphrase: $ops_manager_decryption_passphrase
    OPSMAN_opsman_url: $opsman_url
    OPSMAN_opsman_keypair: $opsman_keypair
    OPSMAN_vms_security_group: $vms_security_group
    OPSMAN_trusted_certs: $trusted_certs
    OPSMAN_opsman_ssh_private_key: $opsman_ssh_private_key
    OPSMAN_aws_access_key_id: $aws_access_key_id
    OPSMAN_aws_secret_access_key: $aws_secret_access_key
  script:
   - tasks/gitlab-interpolate.sh
   - tasks/configure-authentication.sh
   - tasks/configure-director.sh
   - tasks/apply-director-changes.sh

configure-pas:
  stage: configure-pas
  variables:
    # vars for scripts
    ENV_FILE: mlsb/env.yml
    PRODUCT_FILES: pas/downloaded-files
    CONFIG_FILE: mlsb/pas.yml
    ASSIGN_CONFIG_FILE: pas/assign-stemcell-config/config.yml
    PRODUCT_NAME: pas
    VARS_FILES: vars/mlsb/pas.yml
    STEMCELL_DIR: pas/downloaded-files
    OPS_FILES: ""
    # interpolation
    FILES_GLOB: "env/mlsb/env.yml vars/mlsb/pas.yml"
    VAR_PREFIX: PAS
    PAS_pivnet_token: $pivnet_token
    PAS_opsman_user_username: $opsman_user_username
    PAS_opsman_user_password: $opsman_user_password
    PAS_ops_manager_decryption_passphrase: $ops_manager_decryption_passphrase
    PAS_opsman_url: $opsman_url
    PAS_cloud_controller_encrypt_key_secret: $cloud_controller_encrypt_key_secret
    PAS_monitor_email: $monitor_email
    PAS_credhub_secret: $credhub_secret
    PAS_ssl_cert: $ssl_cert
    PAS_ssl_private_key: $ssl_private_key
    PAS_uaa_cert_pem: $uaa_cert_pem
    PAS_uaa_cert_private_key: $uaa_cert_private_key
    PAS_trusted_certs: $trusted_certs
    PAS_environment: mlsb
    PAS_rds_instance_endpoint: $rds_instance_endpoint
    PAS_rds_instance_password: $rds_instance_password
    PAS_aws_secret_access_key: $aws_secret_access_key
    PAS_aws_access_key_id: $aws_access_key_id
  script:
    - tasks/download-product-s3.sh
    - tasks/gitlab-interpolate.sh
    - tasks/upload-stage-product.sh
    - tasks/configure-product.sh
    - tasks/upload-stemcell.sh

configure-healthwatch:
  stage: configure-healthwatch
  variables:
    # vars for scripts
    ENV_FILE: mlsb/env.yml
    PRODUCT_FILES: healthwatch/downloaded-files
    CONFIG_FILE: mlsb/healthwatch.yml
    ASSIGN_CONFIG_FILE: healthwatch/assign-stemcell-config/config.yml
    PRODUCT_NAME: healthwatch
    VARS_FILES: vars/mlsb/healthwatch.yml
    STEMCELL_DIR: healthwatch/downloaded-files
    OPS_FILES: ""
    # interpolation
    FILES_GLOB: "env/mlsb/env.yml vars/mlsb/healthwatch.yml"
    VAR_PREFIX: HW
    HW_opsman_user_username: $opsman_user_username
    HW_opsman_user_password: $opsman_user_password
    HW_ops_manager_decryption_passphrase: $ops_manager_decryption_passphrase
    HW_opsman_url: $opsman_url
    HW_bosh_check_client_secret: $bosh_check_client_secret
    HW_bosh_check_client_id: $bosh_check_client_id
  script:
    - tasks/download-product-s3.sh
    - tasks/gitlab-interpolate.sh
    - tasks/upload-stage-product.sh
    - tasks/configure-product.sh
    - tasks/upload-stemcell.sh

apply-changes:
  stage: apply-changes
  variables:
    FILES_GLOB: "env/mlsb/env.yml"
    ENV_FILE: mlsb/env.yml
    VAR_PREFIX: PAS
    PAS_pivnet_token: $pivnet_token
    PAS_opsman_user_username: $opsman_user_username
    PAS_opsman_user_password: $opsman_user_password
    PAS_ops_manager_decryption_passphrase: $ops_manager_decryption_passphrase
    PAS_opsman_url: $opsman_url
  script:
    - tasks/gitlab-interpolate.sh
    - tasks/apply-changes.sh
